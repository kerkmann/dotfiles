local sign_define = vim.fn.sign_define

-- diagnostic
sign_define("DiagnosticSignError", { text = "ÔÄç", texthl = "DiagnosticSignError" })
sign_define("DiagnosticSignWarn", { text = "ÔÅ±", texthl = "DiagnosticSignWarn" })
sign_define("DiagnosticSignInfo", { text = "Ô≠ç", texthl = "DiagnosticSignInfo" })
sign_define("DiagnosticSignHint", { text = "‚û§", texthl = "DiagnosticSignHint" })

-- dap debugger
sign_define("DapBreakpoint", { text = "‚óâ", texthl = "", linehl = "", numhl = "" })
sign_define("DapBreakpointCondition", { text = "‚óç", texthl = "", linehl = "", numhl = "" })
sign_define("DapLogPoint", { text = "‚óã", texthl = "", linehl = "", numhl = "" })

-- git
sign_define(
  "GitSignsLineColAdd",
  { hl = "GitSignsAdd", text = "ÔÅï", numhl = "GitSignsAddNr", linehl = "GitSignsNrAddLn" }
)
sign_define(
  "GitSignsLineColTopdelete",
  { hl = "GitSignsDelete", text = "ü¢ì", numhl = "GitSignsDeleteNr", linehl = "GitSignsDeleteLn" }
)
sign_define(
  "GitSignsLineColDelete",
  { hl = "GitSignsDelete", text = "ü¢ë", numhl = "GitSignsDeleteNr", linehl = "GitSignsDeleteLn" }
)
sign_define(
  "GitSignsLineColChange",
  { hl = "GitSignsChange", text = "Ô•í", numhl = "GitSignsChangeNr", linehl = "GitSignsChangeLn" }
)
sign_define(
  "GitSignsLineColChangedelete",
  { hl = "GitSignsChange", text = "Ô≥∫", numhl = "GitSignsChangeNr", linehl = "GitSignsChangeLn" }
)
