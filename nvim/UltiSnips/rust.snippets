snippet mao "match Option"
match $1 {
	Some($2) => {
		//
	},
	None => {
		//
	},
}
endsnippet

snippet mar "match Result"
match $1 {
	Ok($2) => {
		//
	},
	Err($3) => {
		//
	},
}
endsnippet

snippet ma "match" b
match $1 {
	$2 => {
		//
	},
}
endsnippet

snippet i "impl"
impl $1 {
	$2
}
endsnippet

snippet it "impl trait"
impl $1 for $2 {
	$3
}
endsnippet

snippet structi "struct and impl"
#[derive(Debug)]
struct $1 {
	$2
}

impl $1 {
	$3
}
endsnippet

snippet tr "trait"
trait $1 {
	$2
}
endsnippet

snippet d! "debug"
dbg!($0)
endsnippet

snippet pl! "println"
println!("$0")
endsnippet

snippet new "new function"
fn new($1) -> Self {
	$0
}
endsnippet

snippet iflet "if let option"
if let Some($1) = $2 {
	$3
} else {
	$4
}$5
endsnippet

snippet en "enum"
#[derive(Debug)]
enum $1 {
	$2
}
endsnippet

snippet drdebug "derive debug"
#[derive(Debug)]
endsnippet
