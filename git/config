[user]
	email = sinner1991@gmail.com
	name = koopa1338
[color]
    diff = auto
    status = auto
    branch = auto
    ui = true
[alias]
	a = add
	aa = add --all
	ap = add -p
	au = add -u
	aup = add -up
	br = branch
	bra = branch -a
	cl = clone
	cm = commit
	cma = commit --amend
	cmi = commit --interactive
	cmm = commit -m
	co = checkout
    d = diff
    ds = diff --stat
    dc = diff --cached
	dis = checkout --
	f = fetch
	fa = fetch --all
	fp = fetch -p
	i = init
	ll = log --graph --pretty='format:%C(red)%d%C(reset) %C(yellow)%h%C(reset) %ar %C(green)%aN%C(reset) %s'
	ls = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'
	lsa = !git ls --all
	mb = !git checkout --no-track -B `git rev-parse --abbrev-ref HEAD`
	out = !git --no-pager ls --branches --simplify-by-decoration --not --remotes
	p = push
	pf = push --force-with-lease
	pl = pull --rebase
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase -i
	rbs = rebase --skip
	remotes = remote -v
	rs = reset
	st = status -sb
	sta = stash
	uncm = reset --mixed HEAD~
	unstage = reset HEAD --
    be = branch --edit-description
    incoming = remote update --prune; git log ..@{upstream}
    outgoing = log @{upstream}..
    pln = pull --rebase --no-autostash
    pub = push -u origin $(git branch-name)
    stal = stash list
    stap = stash pop
    tags = tag -n1 --list
    unpub = !git push origin :$(git branch-name)

[push]
    default = simple
    followTags = true
[diff]
	tool = nvimdiff
    colorMoved = default
[difftool "nvimdiff"]
	cmd = nvim -d $LOCAL $REMOTE
[core]
    pager = delta
	autocrlf = input
[credential]
	helper = store
[rebase]
    autoStash = true
[interactive]
    diffFilter = delta --color-only
[delta]
    side-by-side = true
    line-numbers = true
    syntax-theme = base16
[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow box ul
    file-decoration-style = none


[includeIf "gitdir:~/dev/"]
    path = ~/dotfiles/git/work

[includeIf "gitdir:~/homeoffice/"]
    path = ~/dotfiles/git/work
